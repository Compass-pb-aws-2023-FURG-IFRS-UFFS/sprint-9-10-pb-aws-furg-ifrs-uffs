service: equitalk-middleware
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1 
  environment:
    BUCKET_NAME: ${env:BUCKET_NAME}
    PRINCIPAL_ARN: ${env:PRINCIPAL_ARN}
    BOT_ID: ${env:BOT_ID}
    BOT_ALIAS_ID: ${env:BOT_ALIAS_ID}
    LOCALE_ID: ${env:LOCALE_ID}
    BOT_ARN: ${env:BOT_ARN}
    ACCOUNT_SID: ${env:ACCOUNT_SID}
    AUTH_TOKEN: ${env:AUTH_TOKEN}
    TWILIO_DEFAULT_NUMBER: ${env:TWILIO_DEFAULT_NUMBER}
    TRANSCRIBE_NAME:  ${env:TRANSCRIBE_NAME}
    S3_DEFAULT_ERROR: ${env:S3_DEFAULT_ERROR}
    S3_BUCKET_NOT_FOUND_ERROR: ${env:S3_BUCKET_NOT_FOUND_ERROR}
    S3_ACCESS_DENIED_ERROR: ${env:S3_ACCESS_DENIED_ERROR}
    S3_KEY_NOT_FOUND_ERROR: ${env:S3_KEY_NOT_FOUND_ERROR}
    S3_KEY_ACCESS_DENIED_ERROR: ${env:S3_KEY_ACCESS_DENIED_ERROR}
    S3_FILE_NOT_FOUND_ERROR: ${env:S3_FILE_NOT_FOUND_ERROR}
    S3_FILE_ACCESS_DENIED_ERROR: ${env:S3_FILE_ACCESS_DENIED_ERROR}
    LEX_DEFAULT_ERROR: ${env:LEX_DEFAULT_ERROR}
    LEX_BOT_NOT_FOUND_ERROR: ${env:LEX_BOT_NOT_FOUND_ERROR}
    LEX_ACCESS_DENIED_ERROR: ${env:LEX_ACCESS_DENIED_ERROR}
    LEX_ALIAS_NOT_FOUND_ERROR: ${env:LEX_ALIAS_NOT_FOUND_ERROR}
    LEX_ALIAS_ACCESS_DENIED_ERROR: ${env:LEX_ALIAS_ACCESS_DENIED_ERROR}
    LEX_LOCALE_NOT_FOUND_ERROR: ${env:LEX_LOCALE_NOT_FOUND_ERROR}
    LEX_LOCALE_ACCESS_DENIED_ERROR: ${env:LEX_LOCALE_ACCESS_DENIED_ERROR}
    LEX_INTENT_NOT_FOUND_ERROR: ${env:LEX_INTENT_NOT_FOUND_ERROR}
    LEX_INTENT_ACCESS_DENIED_ERROR: ${env:LEX_INTENT_ACCESS_DENIED_ERROR}
    LEX_SLOT_NOT_FOUND_ERROR: ${env:LEX_SLOT_NOT_FOUND_ERROR}
    LEX_SLOT_ACCESS_DENIED_ERROR: ${env:LEX_SLOT_ACCESS_DENIED_ERROR}
    LEX_SESSION_NOT_FOUND_ERROR: ${env:LEX_SESSION_NOT_FOUND_ERROR}
    LEX_SESSION_ACCESS_DENIED_ERROR: ${env:LEX_SESSION_ACCESS_DENIED_ERROR}
    LEX_TEXT_NOT_FOUND_ERROR: ${env:LEX_TEXT_NOT_FOUND_ERROR}
    LEX_TEXT_ACCESS_DENIED_ERROR: ${env:LEX_TEXT_ACCESS_DENIED_ERROR}
    LEX_TRANSCRIPT_NOT_FOUND_ERROR: ${env:LEX_TRANSCRIPT_NOT_FOUND_ERROR}
    LEX_TRANSCRIPT_ACCESS_DENIED_ERROR: ${env:LEX_TRANSCRIPT_ACCESS_DENIED_ERROR}
    LEX_TRANSCRIPT_NOT_READY_ERROR: ${env:LEX_TRANSCRIPT_NOT_READY_ERROR}
    POLLY_DEFAULT_ERROR: ${env:POLLY_DEFAULT_ERROR}
    POLLY_ACCESS_DENIED_ERROR: ${env:POLLY_ACCESS_DENIED_ERROR}
    POLLY_VOICE_NOT_FOUND_ERROR: ${env:POLLY_VOICE_NOT_FOUND_ERROR}
    POLLY_VOICE_ACCESS_DENIED_ERROR: ${env:POLLY_VOICE_ACCESS_DENIED_ERROR}
    POLLY_TEXT_NOT_FOUND_ERROR: ${env:POLLY_TEXT_NOT_FOUND_ERROR}
    POLLY_TEXT_ACCESS_DENIED_ERROR: ${env:POLLY_TEXT_ACCESS_DENIED_ERROR}
    POLLY_OUTPUT_NOT_FOUND_ERROR: ${env:POLLY_OUTPUT_NOT_FOUND_ERROR}
    POLLY_OUTPUT_ACCESS_DENIED_ERROR: ${env:POLLY_OUTPUT_ACCESS_DENIED_ERROR}
    TRANSCRIBE_DEFAULT_ERROR: ${env:TRANSCRIBE_DEFAULT_ERROR}
    TRANSCRIBE_ACCESS_DENIED_ERROR: ${env:TRANSCRIBE_ACCESS_DENIED_ERROR}
    TRANSCRIBE_JOB_NOT_FOUND_ERROR: ${env:TRANSCRIBE_JOB_NOT_FOUND_ERROR}
    TRANSCRIBE_JOB_ACCESS_DENIED_ERROR: ${env:TRANSCRIBE_JOB_ACCESS_DENIED_ERROR}
    TRANSCRIBE_JOB_NOT_READY_ERROR: ${env:TRANSCRIBE_JOB_NOT_READY_ERROR}
    REKOGNITION_DEFAULT_ERROR: ${env:REKOGNITION_DEFAULT_ERROR}
    REKOGNITION_ACCESS_DENIED_ERROR: ${env:REKOGNITION_ACCESS_DENIED_ERROR}
    REKOGNITION_IMAGE_NOT_FOUND_ERROR: ${env:REKOGNITION_IMAGE_NOT_FOUND_ERROR}
    REKOGNITION_IMAGE_ACCESS_DENIED_ERROR: ${env:REKOGNITION_IMAGE_ACCESS_DENIED_ERROR}
    REKOGNITION_IMAGE_NOT_READY_ERROR: ${env:REKOGNITION_IMAGE_NOT_READY_ERROR}
    TWILIO_DEFAULT_ERROR: ${env:TWILIO_DEFAULT_ERROR}
    TWILIO_ACCESS_DENIED_ERROR: ${env:TWILIO_ACCESS_DENIED_ERROR}
    TWILIO_MESSAGE_NOT_FOUND_ERROR: ${env:TWILIO_MESSAGE_NOT_FOUND_ERROR}
    TWILIO_MESSAGE_ACCESS_DENIED_ERROR: ${env:TWILIO_MESSAGE_ACCESS_DENIED_ERROR}
    TWILIO_MESSAGE_NOT_READY_ERROR: ${env:TWILIO_MESSAGE_NOT_READY_ERROR}
    API_BACKEND_URL: ${env:API_BACKEND_URL}
  iam:
    role:
      name: role-for-equitalk-middleware
      statements:
        - Effect: "Allow"
          Action:
            - "lex:RecognizeText"
          Resource: ${env:BOT_ARN}
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:GetObjectAttributes
            - s3:PutObject
          Resource:
            - arn:aws:s3:::${env:BUCKET_NAME}/*
        - Effect: Allow
          Action:
            - transcribe:StartTranscriptionJob
            - polly:SynthesizeSpeech
            - rekognition:DetectText
          Resource: "*"

resources:
  Resources:
    MyS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:BUCKET_NAME}
        PublicAccessBlockConfiguration:
          BlockPublicPolicy: false
          RestrictPublicBuckets: false
    
    MyBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: MyS3Bucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: "*"
              Action: s3:GetObject
              Resource:
                Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: MyS3Bucket
                    - "/*"
            - Effect: Allow
              Principal:
                AWS: ${env:PRINCIPAL_ARN}
              Action: s3:PutObject
              Resource:
                Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: MyS3Bucket
                    - "/*"
                    
functions:
  handleIntent:
    handler: handler.handleIntent
    events:
      - http:
          path: /handleIntent
          method: post

plugins:
  - serverless-offline
custom:
  serverless-offline:
    host: '127.0.0.1'