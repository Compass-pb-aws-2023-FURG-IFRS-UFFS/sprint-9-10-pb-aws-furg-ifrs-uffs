service: final-lex-bot-v1
frameworkVersion: '3'

useDotenv: true

provider:
  name   : aws
  region : us-east-1 
  runtime: python3.9

  iam:
    role:
      name: role-for-sprint-final
      statements:
        - Effect: Allow
          Action:
            - rekognition:DetectText
            - "polly:SynthesizeSpeech"
            - s3:GetObject
            - s3:PutObject
          Resource: "*"
        - Effect: Allow
          Action: lambda:InvokeFunction
          Resource: "*"
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:GetObjectAttributes
          Resource:
            - arn:aws:s3:::${env:BUCKET_NAME}/*

  environment:
    API_KEY_OPENCAGE_GEOCODE: ${env:API_KEY_OPENCAGE_GEOCODE}
    AROUND_SEARCH_PLACES: ${env:AROUND_SEARCH_PLACES}
    NUMBER_OF_PLACES: ${env:NUMBER_OF_PLACES}
    VIA_CEP_BASE_URL: ${env:VIA_CEP_BASE_URL}
    OVERPASS_API_BASE_URL: ${env:OVERPASS_API_BASE_URL}
    OPENSTREETMAP_BASE_URL: ${env:OPENSTREETMAP_BASE_URL}
    BUCKET_NAME: ${env:BUCKET_NAME}
    IMAGE_NAME: ${env:IMAGE_NAME}

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:BUCKET_NAME}
        PublicAccessBlockConfiguration:
          BlockPublicPolicy: false
          RestrictPublicBuckets: false
    MyBucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
          Bucket:
            Ref: S3Bucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal:
                  AWS: "*"
                Action: 
                  - s3:GetObject
                  - s3:GetObjectAttributes
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:aws:s3:::"
                      - Ref: S3Bucket
                      - "/*"
              - Effect: Allow
                Principal:
                  AWS: "arn:aws:iam::${aws:accountId}:role/${self:provider.iam.role.name}"
                Action: 
                  - s3:ListBucket
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:aws:s3:::"
                      - Ref: S3Bucket

functions:
  lexIntentVerifier:
    handler: router_controller.handlerLexIntentVerifier
  cep_to_places:
    handler: controllers/intents/cep_to_places_controller.handle_cep_to_places

  image_to_text:
    handler: controllers/intents/image_text_extraction_controller.handle_image_to_text
    events:
      - httpApi:
          path: /testing
          method: get

  text_to_audio:
    handler: services/polly_service.tts
    events:
      - httpApi:
          path: /tts
          method: post

  

plugins:
  - serverless-offline
  - serverless-python-requirements