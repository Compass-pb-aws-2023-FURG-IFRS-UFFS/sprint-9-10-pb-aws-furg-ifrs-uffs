service: auth-service-backend
frameworkVersion: '3'
useDotenv: true
provider:
  name: aws
  runtime: python3.9
  environment:
    BUCKET_NAME: ${env:BucketName}
    DYNAMO_DB_USERS_TABLE: ${env:DYNAMO_DB_USERS_TABLE}
  iam:
    role:
      name: iam-for-lambda-tts
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
          Resource:
            - arn:aws:s3:::${env:BucketName}/*
        - Effect: Allow
          Action:
            - rekognition:*
          Resource:
            - "*"
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
          Resource:
            - arn:aws:dynamodb:us-east-1:*:table/${env:DYNAMO_DB_USERS_TABLE}
      
resources:
  Resources:
    MyS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:BucketName}

functions:
  createLivenessSession:
    handler: create_liveness_session.handler
    events:
      - http:
          path: /create
          method: get
          cors: true

  getLivenessSessionResults:
    handler: get_liveness_session_results.handler
    events:
      - http:
          path: /results
          method: post
          cors: true

      

plugins:
  - serverless-offline
  - serverless-python-requirements

package:
  exclude:
    - node_modules/**
    - venv/**